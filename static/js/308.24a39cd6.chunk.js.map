{"version":3,"file":"static/js/308.24a39cd6.chunk.js","mappings":"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","sources":["components/AddContact/AddContact.jsx","components/Filter/Filter.jsx","redux/selector.js","components/Contacts/Contacts.jsx","webpack://Phonebook - last version/./src/Pages/Phonebook/Phonebook.module.css?c064","Pages/Phonebook/Phonebook.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/managment';\nimport { nanoid } from 'nanoid';\nimport { addedContactNotification } from '../../redux/utils/notifications';\n\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Icon from '@mui/material/Icon';\n\nconst AddContact = () => {\n  const dispatch = useDispatch();\n  const createNewContact = e => {\n    e.preventDefault();\n    dispatch(\n      addContact({\n        id: nanoid(),\n        name: e.target.name.value,\n        number: e.target.phone.value,\n      })\n    );\n    addedContactNotification(e.target.name.value);\n    e.target.reset();\n  };\n\n  const defaultTheme = createTheme();\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 4,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Add new contact\n          </Typography>\n          <Icon color=\"primary\" sx={{ marginTop: 2, fontSize: 40 }}>\n            add_circle\n          </Icon>\n          <Box component=\"form\" onSubmit={createNewContact} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  \n                  name=\"name\"\n                  label=\"Contact name\"\n                  type=\"text\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  \n                  label=\"Phone number\"\n                  name=\"phone\"\n                  type=\"number\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Add contact\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\nexport default AddContact;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { nanoid } from 'nanoid';\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterId = nanoid();\n\n  const filterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  const defaultTheme = createTheme();\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 6,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Find contact\n          </Typography>\n          <Box onChange={e => filterChange(e)} sx={{ mt: 2 }}>\n            <Grid container>\n              <Grid item xs={12}>\n                <TextField\n                  id={filterId}\n                  label=\"Search contact\"\n                  type=\"search\"\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default Filter;\n","export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.isLoading;\nexport const selectError = state => state.error;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/managment';\nimport { selectIsLoading } from '../../redux/selector';\nimport Loader from 'components/Loader/Loader.js';\n\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Grid from '@mui/material/Grid';\nimport FolderIcon from '@mui/icons-material/Folder';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const contacts = useSelector(state => {\n    return state.contacts.items.filter(item =>\n      item.name.toLowerCase().trim().includes(state.filter.toLowerCase().trim())\n    );\n  });\n  const defaultTheme = createTheme();\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Box\n          sx={{\n            marginTop: 3,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={20}>\n              <List>\n                {!!isLoading && <Loader />}\n                {contacts.map(contact => (\n                  <ListItem\n                    key={contact.id}\n                    secondaryAction={\n                      <IconButton\n                        edge=\"end\"\n                        aria-label=\"delete\"\n                        onClick={() => dispatch(deleteContact(contact.id))}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    }\n                  >\n                    <ListItemAvatar>\n                      <Avatar>\n                        <FolderIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={contact.name}\n                      secondary={contact.number}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"Phonebook_phonebook__RdQX+\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/managment';\nimport AddContact from 'components/AddContact/AddContact';\nimport Filter from 'components/Filter/Filter';\nimport Contacts from 'components/Contacts/Contacts';\nimport { selectIsLoading, selectError } from 'redux/selector';\nimport Loader from 'components/Loader/Loader';\nimport css from './Phonebook.module.css';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.phonebook}>\n      <title>Phonebook</title>\n      <AddContact />\n      <Filter />\n      <Contacts />\n      {!!isLoading && !error && <Loader />}\n    </div>\n  );\n}\n"],"names":["dispatch","useDispatch","defaultTheme","createTheme","ThemeProvider","theme","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","Icon","color","fontSize","onSubmit","e","preventDefault","addContact","id","nanoid","name","target","value","number","phone","addedContactNotification","reset","mt","Grid","container","spacing","item","xs","TextField","required","fullWidth","label","type","Button","mb","filterId","onChange","setFilter","filterChange","selectIsLoading","state","isLoading","selectError","error","useSelector","contacts","items","filter","toLowerCase","trim","includes","md","List","Loader","map","contact","ListItem","secondaryAction","IconButton","edge","onClick","deleteContact","Delete","ListItemAvatar","Avatar","Folder","ListItemText","primary","secondary","Phonebook","useEffect","fetchContacts","className","css"],"sourceRoot":""}