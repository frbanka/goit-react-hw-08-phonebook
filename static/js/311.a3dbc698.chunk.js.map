{"version":3,"file":"static/js/311.a3dbc698.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","webpack://Phonebook - last version/./src/components/AddContact/AddContact.module.css?e55c","components/AddContact/AddContact.jsx","webpack://Phonebook - last version/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://Phonebook - last version/./src/components/Contacts/Contacts.module.css?5e71","redux/selector.js","components/Contacts/Contacts.jsx","Pages/Phonebook/Phonebook.js"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"AddContact_phonebook__Vxqzw\",\"phonebook__section\":\"AddContact_phonebook__section__Eudd4\",\"phonebook__label\":\"AddContact_phonebook__label__9ShQa\",\"phonebook__input\":\"AddContact_phonebook__input__wEMer\",\"phonebook__button\":\"AddContact_phonebook__button__EPpAK\"};","import { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/managment';\nimport { nanoid } from 'nanoid';\nimport { addedContactNotification } from '../../redux/utils/notifications';\n\nimport css from '../AddContact/AddContact.module.css';\nconst AddContact = () => {\n  const dispatch = useDispatch();\n  const createNewContact = e => {\n    e.preventDefault();\n\n    dispatch(\n      addContact({\n        id: nanoid(),\n        name: e.target.name.value,\n        phone: e.target.phone.value,\n      })\n    );\n    addedContactNotification(e.target.name.value);\n    e.target.reset();\n  };\n\n  return (\n    <section className={css.phonebook__section}>\n      <div>\n        <form onSubmit={createNewContact} className={css.phonebook}>\n          <label className={css.phonebook__label}>Name</label>\n          <input\n            className={css.phonebook__input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"contact name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <label className={css.phonebook__label}>Number</label>\n          <input\n            className={css.phonebook__input}\n            type=\"tel\"\n            name=\"phone\"\n            placeholder=\"phone number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <button type=\"submit\" name=\"submit\" className={css.phonebook__button}>\n            Add Contact\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default AddContact;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__input\":\"Filter_filter__input__toa89\"};","import css from '../Filter/Filter.module.css';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { nanoid } from 'nanoid';\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterId = nanoid();\n\n  const filterChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <input\n      className={css.filter__input}\n      type=\"text\"\n      name=\"filter\"\n      id={filterId}\n      onChange={e => filterChange(e)}\n      placeholder=\"Search contact by name\"\n    />\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts__section\":\"Contacts_contacts__section__B49F-\"};","export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.isLoading;\nexport const selectError = state => state.error;\n","import css from '../Contacts/Contacts.module.css';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/managment';\nimport { selectIsLoading } from '../../redux/selector';\nimport Loader from 'components/Loader/Loader.js';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const contacts = useSelector(state => {\n    return state.contacts.items.filter(item =>\n      item.name.toLowerCase().trim().includes(state.filter.toLowerCase().trim())\n    );\n  });\n\n  return (\n    <section className={css.contacts__section}>\n      <div>\n        <h4 className={css.contacts__title}>\n          You have {contacts.length} contacts\n        </h4>\n        <ul>\n          {!!isLoading && <Loader />}\n          {contacts.map(contact => (\n            <li key={contact.id}>\n              <p>\n                <span>{contact.name}: </span>\n                <span>{contact.phone}</span>\n              </p>\n              <button\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(contact.id))}\n              >\n                remove\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n};\nexport default Contacts;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/managment';\nimport AddContact from 'components/AddContact/AddContact';\nimport Filter from 'components/Filter/Filter';\nimport Contacts from 'components/Contacts/Contacts';\nimport { selectIsLoading, selectError } from 'redux/selector';\nimport Loader from 'components/Loader/Loader';\n//import css from './Phonebook.module.css';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Phonebook</title>\n      <AddContact />\n      <Filter />\n      <Contacts />\n      {!!isLoading && !error && <Loader />}\n    </>\n  );\n}\n"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","dispatch","useDispatch","className","css","onSubmit","e","preventDefault","addContact","name","target","value","phone","addedContactNotification","reset","type","placeholder","pattern","title","required","filterId","onChange","setFilter","currentTarget","filterChange","selectIsLoading","state","isLoading","selectError","error","useSelector","contacts","items","filter","item","toLowerCase","trim","includes","length","Loader","map","contact","onClick","deleteContact","Phonebook","useEffect","fetchContacts"],"sourceRoot":""}